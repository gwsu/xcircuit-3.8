%!PS-Adobe-3.0 EPSF-3.0
%%Title: examples/letters
%%Creator: Xcircuit v2.0
%%CreationDate: Tue Nov 17 21:28:11 1998
%%Pages: 1
%%BoundingBox: 68 68 826 1150
%%DocumentNeededResources: 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--8/8/97  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 2 mul 1 add copy 0 exch
   { exch exec exch stringwidth pop add } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow { { exec show } repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
/showflag 1 def tshow grestore } def
/pinlabel { /pspc 20 def label /pspc 0 def } def
/pinglobal { pinlabel } def

/begingate { gsave translate 0 0 moveto dup 0 lt {neg 1 sub -1 1 scale} if
	rotate dup scale /pinlabel { pop pop pop pop 2 mul {pop} repeat}
	def } bind def
/beginparm { -1 1 {1 add -1 roll def} for begingate } bind def
/endgate { grestore /pinlabel { /pspc 20 def
	label /pspc 0 def } def } bind def

/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/myA {
% 0 0 256 320 bbox
begingate
240  1.00 0 0 112 320 144 320 32 0 4 polygon
240  1.00 256 0 144 320 112 320 224 0 4 polygon
240  1.00 48 80 48 112 208 112 208 80 4 polygon
endgate
} def

/myB {
% 0 0 192 320 bbox
begingate
240  1.00 0 0 0 320 32 320 32 0 4 polygon
80 160 beginpath
80 240 80 270.00 450.00 arc
80 288 1 polyc
80 240 48 450.00 270.00 arcn
80 160 1 polyc
241  1.00 endpath
96 0 beginpath
96 96 96 270.00 450.00 arc
96 160 1 polyc
96 96 65 450.00 270.00 arcn
96 0 1 polyc
241  1.00 endpath
240  1.00 32 160 32 192 96 192 96 160 4 polygon
240  1.00 32 288 32 320 80 320 80 288 4 polygon
240  1.00 32 0 32 32 96 32 96 0 4 polygon
endgate
} def

/myC {
% 0 0 259 320 bbox
begingate
241 61 beginpath
160 160 128 309.81 50.19 arcn
259 284 1 polyc
160 160 160 51.34 308.66 arc
240  1.00 endpath
endgate
} def

/myD {
% 0 0 256 320 bbox
begingate
96 0 beginpath
96 160 160 270.00 450.00 arc
96 288 1 polyc
96 160 128 450.00 270.00 arcn
96 0 1 polyc
241  1.00 endpath
240  1.00 0 0 0 320 32 320 32 0 4 polygon
240  1.00 32 288 32 320 96 320 96 288 4 polygon
240  1.00 32 0 32 32 96 32 96 0 4 polygon
endgate
} def

/myE {
% 0 0 192 320 bbox
begingate
240  1.00 0 0 0 320 32 320 32 0 4 polygon
240  1.00 32 288 32 320 192 320 192 288 4 polygon
240  1.00 32 0 32 32 192 32 192 0 4 polygon
240  1.00 32 144 32 176 160 176 160 144 4 polygon
endgate
} def

/myF {
% 0 0 192 320 bbox
begingate
240  1.00 0 0 0 320 32 320 32 0 4 polygon
240  1.00 32 288 32 320 192 320 192 288 4 polygon
240  1.00 32 144 32 176 160 176 160 144 4 polygon
endgate
} def

/myG {
% 0 0 274 320 bbox
begingate
240  1.00 162 144 162 176 274 176 274 144 4 polygon
240  1.00 240 48 240 144 274 144 274 48 4 polygon
241 61 beginpath
160 160 128 309.81 50.19 arcn
259 284 1 polyc
160 160 160 51.34 315.00 arc
240  1.00 endpath
endgate
} def

/myH {
% 0 0 224 320 bbox
begingate
240  1.00 0 0 0 320 32 320 32 0 4 polygon
240  1.00 192 0 192 320 224 320 224 0 4 polygon
240  1.00 32 144 32 176 192 176 192 144 4 polygon
endgate
} def

/myI {
% 0 0 32 320 bbox
begingate
240  1.00 0 0 0 320 32 320 32 0 4 polygon
endgate
} def

/myJ {
% -4 0 132 320 bbox
begingate
240  1.00 96 80 96 320 128 320 128 80 4 polygon
128 80 beginpath
48 80 80 360.00 229.40 arcn
14 47 1 polyc
48 80 48 225.00 360.00 arc
240  1.00 endpath
endgate
} def

/myK {
% 0 0 224 320 bbox
begingate
240  1.00 0 0 0 320 32 320 32 0 4 polygon
240  1.00 8 176 160 320 200 320 48 176 4 polygon
240  1.00 184 0 8 176 48 176 224 0 4 polygon
endgate
} def

/myL {
% 0 0 160 320 bbox
begingate
240  1.00 0 0 0 320 32 320 32 0 4 polygon
240  1.00 32 0 32 32 160 32 160 0 4 polygon
endgate
} def

/myM {
% 0 0 320 320 bbox
begingate
240  1.00 144 0 288 320 320 320 176 0 4 polygon
240  1.00 176 0 32 320 0 320 144 0 4 polygon
240  1.00 0 0 0 320 32 320 32 0 4 polygon
240  1.00 288 0 288 320 320 320 320 0 4 polygon
endgate
} def

/myN {
% 0 0 224 320 bbox
begingate
240  1.00 224 0 32 320 0 320 192 0 4 polygon
240  1.00 0 0 0 320 32 320 32 0 4 polygon
240  1.00 192 0 192 320 224 320 224 0 4 polygon
endgate
} def

/myO {
% 0 0 320 320 bbox
begingate
288 160 beginpath
160 160 128 0.00 360.00 arc
320 160 1 polyc
160 160 160 0.00 360.00 arc
241  1.00 endpath
endgate
} def

/myP {
% 0 0 192 320 bbox
begingate
240  1.00 0 0 0 320 32 320 32 0 4 polygon
96 128 beginpath
96 224 96 270.00 450.00 arc
96 288 1 polyc
96 224 65 450.00 270.00 arcn
96 128 1 polyc
241  1.00 endpath
240  1.00 32 128 32 160 96 160 96 128 4 polygon
240  1.00 32 288 32 320 96 320 96 288 4 polygon
endgate
} def

/myQ {
% 0 0 320 320 bbox
begingate
288 160 beginpath
160 160 128 0.00 360.00 arc
320 160 1 polyc
160 160 160 0.00 360.00 arc
241  1.00 endpath
240  1.00 280 0 184 96 224 96 320 0 4 polygon
endgate
} def

/myR {
% 0 0 208 320 bbox
begingate
240  1.00 0 0 0 320 32 320 32 0 4 polygon
96 128 beginpath
96 224 96 270.00 450.00 arc
96 288 1 polyc
96 224 65 450.00 270.00 arcn
96 128 1 polyc
241  1.00 endpath
240  1.00 32 128 32 160 96 160 96 128 4 polygon
240  1.00 32 288 32 320 96 320 96 288 4 polygon
240  1.00 168 0 80 144 120 144 208 0 4 polygon
endgate
} def

/myS {
% -1 -1 169 320 bbox
begingate
13 29 beginpath
80 87 88 -139.33 65.80 arc
55 197 1 polyc
80 239 49 239.81 36.45 arcn
142 290 1 polyc
80 239 80 40.16 240.45 arc
102 139 1 polyc
80 87 56 66.80 -138.37 arcn
22 66 1 polyc
-1 44 1 polyc
15 28 1 polyc
241  1.00 endpath
endgate
} def

/myT {
% 0 0 192 320 bbox
begingate
240  1.00 0 288 0 320 192 320 192 288 4 polygon
240  1.00 80 0 80 320 112 320 112 0 4 polygon
endgate
} def

/myU {
% 0 0 256 320 bbox
begingate
240  1.00 0 128 0 320 32 320 32 128 4 polygon
240  1.00 224 128 224 320 256 320 256 128 4 polygon
32 127 beginpath
128 128 96 180.00 360.00 arc
256 128 1 polyc
128 128 128 360.00 180.00 arcn
240  1.00 endpath
endgate
} def

/myV {
% 0 0 256 320 bbox
begingate
240  1.00 112 0 224 320 256 320 144 0 4 polygon
240  1.00 144 0 32 320 0 320 112 0 4 polygon
endgate
} def

/myW {
% 0 0 352 320 bbox
begingate
240  1.00 80 0 160 320 192 320 112 0 4 polygon
240  1.00 112 0 32 320 0 320 80 0 4 polygon
240  1.00 240 0 320 320 352 320 272 0 4 polygon
240  1.00 272 0 192 320 160 320 240 0 4 polygon
endgate
} def

/myX {
% 0 0 232 320 bbox
begingate
240  1.00 0 0 192 320 232 320 40 0 4 polygon
240  1.00 192 0 0 320 40 320 232 0 4 polygon
endgate
} def

/myY {
% 0 0 256 320 bbox
begingate
240  1.00 112 0 112 176 144 176 144 0 4 polygon
240  1.00 128 136 0 320 40 320 128 192 4 polygon
240  1.00 128 136 256 320 216 320 128 192 4 polygon
endgate
} def

/myZ {
% 0 0 192 320 bbox
begingate
240  1.00 0 288 0 320 192 320 192 288 4 polygon
240  1.00 0 0 0 32 192 32 192 0 4 polygon
240  1.00 0 32 152 288 192 288 40 32 4 polygon
endgate
} def

/mya {
% 0 0 176 192 bbox
begingate
240  1.00 144 0 144 192 176 192 176 0 4 polygon
153 67 beginpath
96 96 64 333.43 26.57 arcn
164 164 1 polyc
96 96 96 45.00 308.66 arc
240  1.00 endpath
endgate
} def

/myb {
% 0 0 176 320 bbox
begingate
240  1.00 0 0 0 320 32 320 32 0 4 polygon
22 67 beginpath
80 96 64 -153.43 153.43 arc
12 164 1 polyc
80 96 96 135.00 -128.66 arcn
240  1.00 endpath
endgate
} def

/myc {
% 0 0 156 192 bbox
begingate
136 46 beginpath
96 96 64 309.81 50.19 arcn
156 171 1 polyc
96 96 96 51.34 308.66 arc
240  1.00 endpath
endgate
} def

/myd {
% 0 0 176 320 bbox
begingate
240  1.00 144 0 144 320 176 320 176 0 4 polygon
153 67 beginpath
96 96 64 333.43 26.57 arcn
164 164 1 polyc
96 96 96 45.00 308.66 arc
240  1.00 endpath
endgate
} def

/mye {
% 0 0 192 192 bbox
begingate
240  1.00 16 80 16 112 160 112 192 96 192 80 5 polygon
147 57 beginpath
96 96 64 323.13 0.00 arcn
192 96 1 polyc
96 96 96 0.00 324.46 arc
240  1.00 endpath
endgate
} def

/myf {
% 0 0 164 320 bbox
begingate
240  1.00 80 256 80 0 48 0 48 256 4 polygon
240  1.00 0 176 0 208 128 208 128 176 4 polygon
138 273 beginpath
112 256 32 33.69 180.00 arc
48 256 1 polyc
112 256 64 180.00 35.54 arcn
240  1.00 endpath
endgate
} def

/myg {
% 0 -112 176 304 bbox
begingate
153 67 beginpath
96 96 64 333.43 26.57 arcn
164 164 1 polyc
96 96 96 45.00 308.66 arc
240  1.00 endpath
240  1.00 144 -16 144 192 176 192 176 -16 4 polygon
36 -63 beginpath
80 -16 64 227.73 360.00 arc
176 -16 1 polyc
80 -16 96 360.00 225.00 arcn
240  1.00 endpath
endgate
} def

/myh {
% 0 0 160 320 bbox
begingate
240  1.00 0 0 0 320 32 320 32 0 4 polygon
240  1.00 128 0 128 112 160 112 160 0 4 polygon
3 133 beginpath
80 112 80 164.05 0.00 arcn
128 112 1 polyc
80 112 48 0.00 165.96 arc
240  1.00 endpath
endgate
} def

/myi {
% 0 0 32 256 bbox
begingate
240  1.00 0 0 0 192 32 192 32 0 4 polygon
240  1.00 16 240 16 0.00 360.00 xcarc
endgate
} def

/myj {
% -84 -112 116 368 bbox
begingate
240  1.00 0 -48 0 192 32 192 32 -48 4 polygon
-58 -65 beginpath
-32 -48 32 213.69 360.00 arc
32 -48 1 polyc
-32 -48 64 360.00 215.54 arcn
240  1.00 endpath
240  1.00 16 240 16 0.00 360.00 xcarc
endgate
} def

/myk {
% 0 0 160 320 bbox
begingate
240  1.00 0 0 0 320 32 320 32 0 4 polygon
240  1.00 16 96 104 192 144 192 56 96 4 polygon
240  1.00 160 0 48 112 8 112 120 0 4 polygon
endgate
} def

/myl {
% 0 0 32 320 bbox
begingate
240  1.00 0 0 0 320 32 320 32 0 4 polygon
endgate
} def

/mym {
% 0 0 288 192 bbox
begingate
240  1.00 256 0 256 112 288 112 288 0 4 polygon
240  1.00 128 0 128 112 160 112 160 0 4 polygon
240  1.00 0 0 0 192 32 192 32 0 4 polygon
3 133 beginpath
80 112 80 164.05 0.00 arcn
128 112 1 polyc
80 112 48 0.00 165.96 arc
240  1.00 endpath
131 133 beginpath
208 112 80 164.05 0.00 arcn
256 112 1 polyc
208 112 48 0.00 165.96 arc
240  1.00 endpath
endgate
} def

/myn {
% 0 0 160 192 bbox
begingate
240  1.00 0 0 0 192 32 192 32 0 4 polygon
3 133 beginpath
80 112 80 164.05 0.00 arcn
128 112 1 polyc
80 112 48 0.00 165.96 arc
240  1.00 endpath
240  1.00 128 0 128 112 160 112 160 0 4 polygon
endgate
} def

/myo {
% 0 0 192 192 bbox
begingate
192 96 beginpath
96 96 96 0.00 360.00 arc
160 96 1 polyc
96 96 64 0.00 360.00 arc
241  1.00 endpath
endgate
} def

/myp {
% 0 -112 176 304 bbox
begingate
22 67 beginpath
80 96 64 -153.43 153.43 arc
12 164 1 polyc
80 96 96 135.00 -128.66 arcn
240  1.00 endpath
240  1.00 0 -112 0 192 32 192 32 -112 4 polygon
endgate
} def

/myq {
% 0 -112 176 304 bbox
begingate
153 67 beginpath
96 96 64 333.43 26.57 arcn
164 164 1 polyc
96 96 96 45.00 308.66 arc
240  1.00 endpath
240  1.00 144 -112 144 192 176 192 176 -112 4 polygon
endgate
} def

/myr {
% 0 0 136 192 bbox
begingate
136 168 beginpath
80 112 80 45.00 180.00 arc
32 112 1 polyc
80 112 48 180.00 26.57 arcn
240  1.00 endpath
240  1.00 0 0 0 192 32 192 32 0 4 polygon
endgate
} def

/mys {
% 0 -1 113 193 bbox
begingate
106 161 beginpath
56 136 56 26.57 253.30 arc
62 79 1 polyc
56 56 24 433.30 198.43 arcn
4 34 1 polyc
56 56 57 -155.56 73.30 arc
49 114 1 polyc
56 136 24 253.30 18.43 arcn
240  1.00 endpath
endgate
} def

/myt {
% 0 0 164 320 bbox
begingate
240  1.00 80 64 80 320 48 320 48 64 4 polygon
240  1.00 0 240 0 208 128 208 128 240 4 polygon
138 46 beginpath
112 64 32 326.31 180.00 arcn
48 64 1 polyc
112 64 64 180.00 324.46 arc
240  1.00 endpath
endgate
} def

/myu {
% 0 0 160 192 bbox
begingate
240  1.00 160 192 160 0 128 0 128 192 4 polygon
156 58 beginpath
80 80 80 344.05 180.00 arcn
32 80 1 polyc
80 80 48 180.00 345.96 arc
240  1.00 endpath
240  1.00 32 192 32 80 0 80 0 192 4 polygon
endgate
} def

/myv {
% 0 0 192 192 bbox
begingate
240  1.00 32 192 112 0 80 0 0 192 4 polygon
240  1.00 160 192 80 0 112 0 192 192 4 polygon
endgate
} def

/myw {
% 0 0 288 192 bbox
begingate
240  1.00 32 192 96 0 64 0 0 192 4 polygon
240  1.00 128 192 64 0 96 0 160 192 4 polygon
240  1.00 160 192 224 0 192 0 128 192 4 polygon
240  1.00 256 192 192 0 224 0 288 192 4 polygon
endgate
} def

/myx {
% 0 0 200 192 bbox
begingate
240  1.00 200 0 40 192 0 192 160 0 4 polygon
240  1.00 0 0 160 192 200 192 40 0 4 polygon
endgate
} def

/myy {
% 0 -112 192 304 bbox
begingate
240  1.00 32 192 112 0 80 0 0 192 4 polygon
240  1.00 160 192 32 -112 64 -112 192 192 4 polygon
endgate
} def

/myz {
% 0 0 160 192 bbox
begingate
240  1.00 0 32 120 160 160 160 40 32 4 polygon
240  1.00 0 192 0 160 160 160 160 192 4 polygon
240  1.00 0 32 0 0 160 0 160 32 4 polygon
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 768 2544 offsets
1.0000 inchscale
2.6000 setlinewidth

1.00 0 192 2736 myA
1.00 0 512 2736 myB
1.00 0 768 2736 myC
1.00 0 1088 2736 myD
1.00 0 1408 2736 myE
1.00 0 1664 2736 myF
1.00 0 1920 2736 myG
1.00 0 192 2352 myH
1.00 0 512 2352 myI
1.00 0 576 2352 myJ
1.00 0 768 2352 myK
1.00 0 1024 2352 myL
1.00 0 1216 2352 myM
1.00 0 1600 2352 myN
1.00 0 1856 2352 myO
1.00 0 192 1968 myP
1.00 0 448 1968 myQ
1.00 0 832 1968 myR
1.00 0 1088 1968 myS
1.00 0 1280 1968 myT
1.00 0 1536 1968 myU
1.00 0 1856 1968 myV
1.00 0 192 1520 myW
1.00 0 576 1520 myX
1.00 0 832 1520 myY
1.00 0 1152 1520 myZ
1.00 0 1408 1520 mya
1.00 0 1632 1520 myb
1.00 0 1856 1520 myc
1.00 0 192 1072 myd
1.00 0 416 1072 mye
1.00 0 608 1072 myf
1.00 0 736 1072 myg
1.00 0 960 1072 myh
1.00 0 1184 1072 myi
1.00 0 1312 1072 myj
1.00 0 1408 1072 myk
1.00 0 1600 1072 myl
1.00 0 1728 1072 mym
1.00 0 192 688 myn
1.00 0 384 688 myo
1.00 0 640 688 myp
1.00 0 864 688 myq
1.00 0 1088 688 myr
1.00 0 1280 688 mys
1.00 0 1408 688 myt
1.00 0 1600 688 myu
1.00 0 1824 688 myv
1.00 0 192 304 myw
1.00 0 512 304 myx
1.00 0 768 304 myy
1.00 0 1024 304 myz
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
