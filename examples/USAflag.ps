%!PS-Adobe-3.0 EPSF-3.0
%%Title: USAflag
%%Creator: Xcircuit v1.6
%%CreationDate: Sat Aug 16 09:29:46 1997
%%Pages: 1
%%BoundingBox: 68 68 868 544
%%DocumentNeededResources: 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 1.6
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--8/8/97  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 1.6 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/bs { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore 0 rmoveto } def
/textx { dup 2 mul 1 add copy 0 exch
   { exch exec exch stringwidth pop add } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty rmoveto } def
/tshow { { exec show } repeat ns } def

/label { gsave translate 0 0 moveto rotate /just exch def
      /glevel 0 def /showflag 0 def
      just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse} if
      just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle}   ifelse} if
      /showflag 1 def tshow grestore } def

/begingate { gsave translate 0 0 moveto dup 0 lt {neg 1 sub -1 1 scale} if
        rotate dup scale } bind def
/endgate { grestore } bind def

/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave tmpa pathbbox clip transform neg exch neg 4 2 roll transform
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  [1 0 0 1 0 0] setmatrix { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 gt exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 0 setgray } def
/inchscale  {0.375 mul dup scale} def
/cmscale    {0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/star {
% -128 -112 256 240 bbox
begingate
240  1.00 -32 32 -128 32 -50 -22 -80 -112 0 -56 80 -112 50 -22 128 32 32 32 
0 128 10 polygon
endgate
} def

%%Page: 1 1
/pgsave save def bop
% 192 768 offsets
1.0000 inchscale
2.6000 setlinewidth

0.000 0.000 0.810 scb
240  1.00 192 768 192 1440 1152 1440 1152 768 4 polygon
sce
1.000 1.000 1.000 scb
240  1.00 192 480 192 576 2304 576 2304 480 4 polygon
0.20 0 432 976 star
0.20 0 592 976 star
0.20 0 832 1040 star
0.20 0 992 1296 star
0.20 0 672 1168 star
0.20 0 672 1296 star
0.20 0 672 1040 star
0.20 0 832 1296 star
0.20 0 992 1168 star
0.20 0 832 1168 star
sce
0.984 0.079 0.254 scb
240  1.00 1152 1152 1152 1248 2304 1248 2304 1152 4 polygon
240  1.00 1152 960 1152 1056 2304 1056 2304 960 4 polygon
240  1.00 192 576 192 672 2304 672 2304 576 4 polygon
sce
1.000 1.000 1.000 scb
0.20 0 592 1104 star
sce
0.984 0.079 0.254 scb
240  1.00 1152 1344 1152 1440 2304 1440 2304 1344 4 polygon
240  1.00 192 384 192 480 2304 480 2304 384 4 polygon
sce
1.000 1.000 1.000 scb
0.20 0 752 848 star
0.20 0 1072 848 star
0.20 0 912 848 star
0.20 0 672 912 star
0.20 0 992 1040 star
0.20 0 832 912 star
0.20 0 992 912 star
0.20 0 352 1040 star
0.20 0 512 1296 star
0.20 0 272 1232 star
0.20 0 272 1360 star
0.20 0 272 1104 star
0.20 0 352 1296 star
0.20 0 512 1168 star
0.20 0 352 1168 star
0.20 0 272 848 star
0.20 0 592 848 star
0.20 0 432 848 star
0.20 0 272 976 star
0.20 0 512 1040 star
0.20 0 352 912 star
0.20 0 512 912 star
0.20 0 912 1104 star
0.20 0 1072 1360 star
0.20 0 752 1232 star
0.20 0 752 1360 star
0.20 0 752 1104 star
0.20 0 912 1360 star
0.20 0 1072 1232 star
0.20 0 912 1232 star
0.20 0 752 976 star
0.20 0 1072 1104 star
0.20 0 912 976 star
0.20 0 1072 976 star
0.20 0 432 1104 star
0.20 0 592 1360 star
0.20 0 432 1360 star
0.20 0 592 1232 star
0.20 0 432 1232 star
sce
0.984 0.079 0.254 scb
240  1.00 192 192 192 288 2304 288 2304 192 4 polygon
sce
1.000 1.000 1.000 scb
240  1.00 1152 1056 1152 1152 2304 1152 2304 1056 4 polygon
240  1.00 1152 864 1152 960 2304 960 2304 864 4 polygon
sce
0.984 0.079 0.254 scb
240  1.00 1152 768 1152 864 2304 864 2304 768 4 polygon
sce
1.000 1.000 1.000 scb
240  1.00 2304 736 2304 768 2304 768 2304 736 4 polygon
240  1.00 192 288 192 384 2304 384 2304 288 4 polygon
240  1.00 192 672 192 768 2304 768 2304 672 4 polygon
240  1.00 1152 1248 1152 1344 2304 1344 2304 1248 4 polygon
sce
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
